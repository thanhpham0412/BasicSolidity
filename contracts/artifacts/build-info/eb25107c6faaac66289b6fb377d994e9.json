{
	"id": "eb25107c6faaac66289b6fb377d994e9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BallotV1.sol": {
				"content": "pragma solidity ^0.4.0;\r\n\r\ncontract Ballot {\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint8 vote;\r\n    }\r\n\r\n    struct Proposal {\r\n        uint voteCount;\r\n    }\r\n\r\n    address chairperson;\r\n    mapping (address => Voter) voters;\r\n    Proposal[] proposals;\r\n\r\n    function Ballot(uint8 _numProposals) public {\r\n        chairperson = msg.sender;\r\n        voters[chairperson].weight = 2;\r\n        proposals.length = _numProposals;\r\n    }\r\n\r\n    function register(address toVoter) public {\r\n        if (msg.sender != chairperson || voters[toVoter].voted) {\r\n            return;\r\n        }\r\n        voters[toVoter].weight = 1;\r\n        voters[toVoter].voted = false;\r\n    }\r\n\r\n    function vote(uint8 toProposal) public {\r\n        Voter storage sender = voters[msg.sender];\r\n        if (sender.voted || toProposal >= proposals.length) {\r\n            return;\r\n        }\r\n        sender.voted = true;\r\n        sender.vote = toProposal;\r\n        proposals[toProposal].voteCount += sender.weight;\r\n    } \r\n\r\n    function winningProposal() public constant returns (uint8 _winningProposal) {\r\n        uint256 winningVoteCount = 0;\r\n        uint8 __winningProposal;\r\n        for (uint8 prop = 0; prop < proposals.length; prop++) {\r\n            if (proposals[prop].voteCount > winningVoteCount) {\r\n                winningVoteCount = proposals[prop].voteCount;\r\n                __winningProposal = prop;\r\n            }\r\n        }\r\n        return __winningProposal;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BallotV1.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/BallotV1.sol\":27:1492  contract Ballot {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BallotV1.sol\":295:466  function Ballot(uint8 _numProposals) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/BallotV1.sol\":295:466  function Ballot(uint8 _numProposals) public {\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/BallotV1.sol\":364:374  msg.sender */\n  caller\n    /* \"contracts/BallotV1.sol\":350:361  chairperson */\n  0x0\n  dup1\n    /* \"contracts/BallotV1.sol\":350:374  chairperson = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BallotV1.sol\":414:415  2 */\n  0x2\n    /* \"contracts/BallotV1.sol\":385:391  voters */\n  0x1\n    /* \"contracts/BallotV1.sol\":385:404  voters[chairperson] */\n  0x0\n    /* \"contracts/BallotV1.sol\":392:403  chairperson */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BallotV1.sol\":385:404  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/BallotV1.sol\":385:411  voters[chairperson].weight */\n  0x0\n  add\n    /* \"contracts/BallotV1.sol\":385:415  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BallotV1.sol\":445:458  _numProposals */\n  dup1\n    /* \"contracts/BallotV1.sol\":426:458  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"contracts/BallotV1.sol\":426:435  proposals */\n  0x2\n    /* \"contracts/BallotV1.sol\":426:458  proposals.length = _numProposals */\n  dup2\n  tag_4\n  swap2\n  swap1\n  jump\t// in(tag_5)\ntag_4:\n  pop\n    /* \"contracts/BallotV1.sol\":295:466  function Ballot(uint8 _numProposals) public {\r... */\n  pop\n    /* \"contracts/BallotV1.sol\":27:1492  contract Ballot {\r... */\n  jump(tag_6)\ntag_5:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  dup2\n  dup4\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_8\n  swap2\n  swap1\n  jump\t// in(tag_9)\ntag_8:\ntag_7:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_9:\n  tag_10\n  swap2\n  swap1\ntag_11:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_12\n  jumpi\n  0x0\n  dup1\n  dup3\n  add\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_11)\ntag_12:\n  pop\n  swap1\n  jump\ntag_10:\n  swap1\n  jump\t// out\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BallotV1.sol\":27:1492  contract Ballot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/BallotV1.sol\":474:700  function register(address toVoter) public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"contracts/BallotV1.sol\":474:700  function register(address toVoter) public {\r... */\n      pop\n      tag_6\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"contracts/BallotV1.sol\":1035:1489  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"contracts/BallotV1.sol\":1035:1489  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BallotV1.sol\":708:1026  function vote(uint8 toProposal) public {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"contracts/BallotV1.sol\":708:1026  function vote(uint8 toProposal) public {\r... */\n      pop\n      tag_12\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_13)\n    tag_12:\n      stop\n        /* \"contracts/BallotV1.sol\":474:700  function register(address toVoter) public {\r... */\n    tag_7:\n        /* \"contracts/BallotV1.sol\":545:556  chairperson */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BallotV1.sol\":531:556  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BallotV1.sol\":531:541  msg.sender */\n      caller\n        /* \"contracts/BallotV1.sol\":531:556  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BallotV1.sol\":531:581  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_15\n      jumpi\n      pop\n        /* \"contracts/BallotV1.sol\":560:566  voters */\n      0x1\n        /* \"contracts/BallotV1.sol\":560:575  voters[toVoter] */\n      0x0\n        /* \"contracts/BallotV1.sol\":567:574  toVoter */\n      dup3\n        /* \"contracts/BallotV1.sol\":560:575  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BallotV1.sol\":560:581  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BallotV1.sol\":531:581  msg.sender != chairperson || voters[toVoter].voted */\n    tag_15:\n        /* \"contracts/BallotV1.sol\":527:616  if (msg.sender != chairperson || voters[toVoter].voted) {\r... */\n      iszero\n      tag_16\n      jumpi\n        /* \"contracts/BallotV1.sol\":598:605  return; */\n      jump(tag_14)\n        /* \"contracts/BallotV1.sol\":527:616  if (msg.sender != chairperson || voters[toVoter].voted) {\r... */\n    tag_16:\n        /* \"contracts/BallotV1.sol\":651:652  1 */\n      0x1\n        /* \"contracts/BallotV1.sol\":626:632  voters */\n      dup1\n        /* \"contracts/BallotV1.sol\":626:641  voters[toVoter] */\n      0x0\n        /* \"contracts/BallotV1.sol\":633:640  toVoter */\n      dup4\n        /* \"contracts/BallotV1.sol\":626:641  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BallotV1.sol\":626:648  voters[toVoter].weight */\n      0x0\n      add\n        /* \"contracts/BallotV1.sol\":626:652  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BallotV1.sol\":687:692  false */\n      0x0\n        /* \"contracts/BallotV1.sol\":663:669  voters */\n      0x1\n        /* \"contracts/BallotV1.sol\":663:678  voters[toVoter] */\n      0x0\n        /* \"contracts/BallotV1.sol\":670:677  toVoter */\n      dup4\n        /* \"contracts/BallotV1.sol\":663:678  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BallotV1.sol\":663:684  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n        /* \"contracts/BallotV1.sol\":663:692  voters[toVoter].voted = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BallotV1.sol\":474:700  function register(address toVoter) public {\r... */\n    tag_14:\n      pop\n      jump\t// out\n        /* \"contracts/BallotV1.sol\":1035:1489  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n    tag_10:\n        /* \"contracts/BallotV1.sol\":1087:1109  uint8 _winningProposal */\n      0x0\n        /* \"contracts/BallotV1.sol\":1122:1146  uint256 winningVoteCount */\n      dup1\n        /* \"contracts/BallotV1.sol\":1161:1184  uint8 __winningProposal */\n      0x0\n        /* \"contracts/BallotV1.sol\":1200:1210  uint8 prop */\n      dup1\n        /* \"contracts/BallotV1.sol\":1149:1150  0 */\n      0x0\n        /* \"contracts/BallotV1.sol\":1122:1150  uint256 winningVoteCount = 0 */\n      swap3\n      pop\n        /* \"contracts/BallotV1.sol\":1213:1214  0 */\n      0x0\n        /* \"contracts/BallotV1.sol\":1200:1214  uint8 prop = 0 */\n      swap1\n      pop\n        /* \"contracts/BallotV1.sol\":1195:1447  for (uint8 prop = 0; prop < proposals.length; prop++) {\r... */\n    tag_18:\n        /* \"contracts/BallotV1.sol\":1223:1232  proposals */\n      0x2\n        /* \"contracts/BallotV1.sol\":1223:1239  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/BallotV1.sol\":1216:1220  prop */\n      dup2\n        /* \"contracts/BallotV1.sol\":1216:1239  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"contracts/BallotV1.sol\":1195:1447  for (uint8 prop = 0; prop < proposals.length; prop++) {\r... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contracts/BallotV1.sol\":1296:1312  winningVoteCount */\n      dup3\n        /* \"contracts/BallotV1.sol\":1268:1277  proposals */\n      0x2\n        /* \"contracts/BallotV1.sol\":1278:1282  prop */\n      dup3\n        /* \"contracts/BallotV1.sol\":1268:1283  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"contracts/BallotV1.sol\":1268:1293  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"contracts/BallotV1.sol\":1268:1312  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"contracts/BallotV1.sol\":1264:1436  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/BallotV1.sol\":1352:1361  proposals */\n      0x2\n        /* \"contracts/BallotV1.sol\":1362:1366  prop */\n      dup2\n        /* \"contracts/BallotV1.sol\":1352:1367  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"contracts/BallotV1.sol\":1352:1377  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"contracts/BallotV1.sol\":1333:1377  winningVoteCount = proposals[prop].voteCount */\n      swap3\n      pop\n        /* \"contracts/BallotV1.sol\":1416:1420  prop */\n      dup1\n        /* \"contracts/BallotV1.sol\":1396:1420  __winningProposal = prop */\n      swap2\n      pop\n        /* \"contracts/BallotV1.sol\":1264:1436  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n    tag_23:\n        /* \"contracts/BallotV1.sol\":1241:1247  prop++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/BallotV1.sol\":1195:1447  for (uint8 prop = 0; prop < proposals.length; prop++) {\r... */\n      jump(tag_18)\n    tag_19:\n        /* \"contracts/BallotV1.sol\":1464:1481  __winningProposal */\n      dup2\n        /* \"contracts/BallotV1.sol\":1457:1481  return __winningProposal */\n      swap4\n      pop\n        /* \"contracts/BallotV1.sol\":1035:1489  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/BallotV1.sol\":708:1026  function vote(uint8 toProposal) public {\r... */\n    tag_13:\n        /* \"contracts/BallotV1.sol\":758:778  Voter storage sender */\n      0x0\n        /* \"contracts/BallotV1.sol\":781:787  voters */\n      0x1\n        /* \"contracts/BallotV1.sol\":781:799  voters[msg.sender] */\n      0x0\n        /* \"contracts/BallotV1.sol\":788:798  msg.sender */\n      caller\n        /* \"contracts/BallotV1.sol\":781:799  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BallotV1.sol\":758:799  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/BallotV1.sol\":814:820  sender */\n      dup1\n        /* \"contracts/BallotV1.sol\":814:826  sender.voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BallotV1.sol\":814:860  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_27\n      jumpi\n      pop\n        /* \"contracts/BallotV1.sol\":844:853  proposals */\n      0x2\n        /* \"contracts/BallotV1.sol\":844:860  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/BallotV1.sol\":830:840  toProposal */\n      dup3\n        /* \"contracts/BallotV1.sol\":830:860  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"contracts/BallotV1.sol\":814:860  sender.voted || toProposal >= proposals.length */\n    tag_27:\n        /* \"contracts/BallotV1.sol\":810:895  if (sender.voted || toProposal >= proposals.length) {\r... */\n      iszero\n      tag_28\n      jumpi\n        /* \"contracts/BallotV1.sol\":877:884  return; */\n      jump(tag_26)\n        /* \"contracts/BallotV1.sol\":810:895  if (sender.voted || toProposal >= proposals.length) {\r... */\n    tag_28:\n        /* \"contracts/BallotV1.sol\":920:924  true */\n      0x1\n        /* \"contracts/BallotV1.sol\":905:911  sender */\n      dup2\n        /* \"contracts/BallotV1.sol\":905:917  sender.voted */\n      0x1\n      add\n      0x0\n        /* \"contracts/BallotV1.sol\":905:924  sender.voted = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BallotV1.sol\":949:959  toProposal */\n      dup2\n        /* \"contracts/BallotV1.sol\":935:941  sender */\n      dup2\n        /* \"contracts/BallotV1.sol\":935:946  sender.vote */\n      0x1\n      add\n      0x1\n        /* \"contracts/BallotV1.sol\":935:959  sender.vote = toProposal */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BallotV1.sol\":1005:1011  sender */\n      dup1\n        /* \"contracts/BallotV1.sol\":1005:1018  sender.weight */\n      0x0\n      add\n      sload\n        /* \"contracts/BallotV1.sol\":970:979  proposals */\n      0x2\n        /* \"contracts/BallotV1.sol\":980:990  toProposal */\n      dup4\n        /* \"contracts/BallotV1.sol\":970:991  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"contracts/BallotV1.sol\":970:1001  proposals[toProposal].voteCount */\n      0x0\n      add\n      0x0\n        /* \"contracts/BallotV1.sol\":970:1018  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BallotV1.sol\":708:1026  function vote(uint8 toProposal) public {\r... */\n    tag_26:\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820caba7e67a87ee2de771bea82120ebfa3abd815d372e2048ca77c57baf8bfb4630029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405160208061053e83398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816100ed91906100f4565b5050610147565b81548183558181111561011b5781836000526020600020918201910161011a9190610120565b5b505050565b61014491905b808211156101405760008082016000905550600101610126565b5090565b90565b6103e8806101566000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e4861461005c578063609ff1bd1461009f578063b3f98adc146100d0575b600080fd5b34801561006857600080fd5b5061009d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610100565b005b3480156100ab57600080fd5b506100b4610258565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100dc57600080fd5b506100fe600480360381019080803560ff1690602001909291905050506102da565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101a85750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101b257610255565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b50565b60008060008060009250600090505b6002805490508160ff1610156102d1578260028260ff1681548110151561028a57fe5b906000526020600020016000015411156102c45760028160ff168154811015156102b057fe5b906000526020600020016000015492508091505b8080600101915050610267565b81935050505090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061034257506002805490508260ff1610155b1561034c576103b8565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff1681548110151561039d57fe5b90600052602060002001600001600082825401925050819055505b50505600a165627a7a72305820caba7e67a87ee2de771bea82120ebfa3abd815d372e2048ca77c57baf8bfb4630029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x53E DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xF4 JUMP JUMPDEST POP POP PUSH2 0x147 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x11B JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x120 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x144 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x126 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3E8 DUP1 PUSH2 0x156 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x255 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2D1 JUMPI DUP3 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x28A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2B0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x267 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x342 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x34C JUMPI PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x39D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xca 0xba PUSH31 0x67A87EE2DE771BEA82120EBFA3ABD815D372E2048CA77C57BAF8BFB4630029 ",
							"sourceMap": "27:1465:0:-;;;295:171;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:171:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:10;350:11;;:24;;;;;;;;;;;;;;;;;;414:1;385:6;:19;392:11;;;;;;;;;;;385:19;;;;;;;;;;;;;;;:26;;:30;;;;445:13;426:32;;:9;:32;;;;;:::i;:::-;;295:171;27:1465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e4861461005c578063609ff1bd1461009f578063b3f98adc146100d0575b600080fd5b34801561006857600080fd5b5061009d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610100565b005b3480156100ab57600080fd5b506100b4610258565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100dc57600080fd5b506100fe600480360381019080803560ff1690602001909291905050506102da565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101a85750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101b257610255565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b50565b60008060008060009250600090505b6002805490508160ff1610156102d1578260028260ff1681548110151561028a57fe5b906000526020600020016000015411156102c45760028160ff168154811015156102b057fe5b906000526020600020016000015492508091505b8080600101915050610267565b81935050505090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061034257506002805490508260ff1610155b1561034c576103b8565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff1681548110151561039d57fe5b90600052602060002001600001600082825401925050819055505b50505600a165627a7a72305820caba7e67a87ee2de771bea82120ebfa3abd815d372e2048ca77c57baf8bfb4630029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x255 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2D1 JUMPI DUP3 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x28A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2B0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x267 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x342 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x34C JUMPI PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x39D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xca 0xba PUSH31 0x67A87EE2DE771BEA82120EBFA3ABD815D372E2048CA77C57BAF8BFB4630029 ",
							"sourceMap": "27:1465:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;474:226;;8:9:-1;5:2;;;30:1;27;20:12;5:2;474:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:454;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1035:454:0;;;;;;;;;;;;;;;;;;;;;;;;;;;708:318;;8:9:-1;5:2;;;30:1;27;20:12;5:2;708:318:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;474:226;545:11;;;;;;;;;;;531:25;;:10;:25;;;;:50;;;;560:6;:15;567:7;560:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;531:50;527:89;;;598:7;;527:89;651:1;626:6;:15;633:7;626:15;;;;;;;;;;;;;;;:22;;:26;;;;687:5;663:6;:15;670:7;663:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;474:226;;:::o;1035:454::-;1087:22;1122:24;1161:23;1200:10;1149:1;1122:28;;1213:1;1200:14;;1195:252;1223:9;:16;;;;1216:4;:23;;;1195:252;;;1296:16;1268:9;1278:4;1268:15;;;;;;;;;;;;;;;;;;;:25;;;:44;1264:172;;;1352:9;1362:4;1352:15;;;;;;;;;;;;;;;;;;;:25;;;1333:44;;1416:4;1396:24;;1264:172;1241:6;;;;;;;1195:252;;;1464:17;1457:24;;1035:454;;;;:::o;708:318::-;758:20;781:6;:18;788:10;781:18;;;;;;;;;;;;;;;758:41;;814:6;:12;;;;;;;;;;;;:46;;;;844:9;:16;;;;830:10;:30;;;;814:46;810:85;;;877:7;;810:85;920:4;905:6;:12;;;:19;;;;;;;;;;;;;;;;;;949:10;935:6;:11;;;:24;;;;;;;;;;;;;;;;;;1005:6;:13;;;970:9;980:10;970:21;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;708:318;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "200000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "41301",
								"vote(uint8)": "62184",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "MSTORE"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "POP"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "MLOAD"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "DUP1"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "PUSHSIZE"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "DUP4"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "CODECOPY"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "DUP2"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "ADD"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "DUP1"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "MSTORE"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "DUP2"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "ADD"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "SWAP1"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "DUP1"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "DUP1"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "MLOAD"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "SWAP1"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "ADD"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "SWAP1"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "SWAP3"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "SWAP2"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "SWAP1"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "POP"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "POP"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "POP"
								},
								{
									"begin": 364,
									"end": 374,
									"name": "CALLER"
								},
								{
									"begin": 350,
									"end": 361,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 350,
									"end": 361,
									"name": "DUP1"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "EXP"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "DUP2"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "SLOAD"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "DUP2"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "MUL"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "NOT"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "AND"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "SWAP1"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "DUP4"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "AND"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "MUL"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "OR"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "SWAP1"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "SSTORE"
								},
								{
									"begin": 350,
									"end": 374,
									"name": "POP"
								},
								{
									"begin": 414,
									"end": 415,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 385,
									"end": 391,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "DUP1"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "SWAP1"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "SLOAD"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "SWAP1"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "EXP"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "SWAP1"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "DIV"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 392,
									"end": 403,
									"name": "AND"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "AND"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "AND"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "DUP2"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "MSTORE"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "ADD"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "SWAP1"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "DUP2"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "MSTORE"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "ADD"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 385,
									"end": 404,
									"name": "KECCAK256"
								},
								{
									"begin": 385,
									"end": 411,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 385,
									"end": 411,
									"name": "ADD"
								},
								{
									"begin": 385,
									"end": 415,
									"name": "DUP2"
								},
								{
									"begin": 385,
									"end": 415,
									"name": "SWAP1"
								},
								{
									"begin": 385,
									"end": 415,
									"name": "SSTORE"
								},
								{
									"begin": 385,
									"end": 415,
									"name": "POP"
								},
								{
									"begin": 445,
									"end": 458,
									"name": "DUP1"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "AND"
								},
								{
									"begin": 426,
									"end": 435,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "DUP2"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "SWAP2"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "SWAP1"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "JUMPDEST"
								},
								{
									"begin": 426,
									"end": 458,
									"name": "POP"
								},
								{
									"begin": 295,
									"end": 466,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMP"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SLOAD"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP4"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SSTORE"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "GT"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "ISZERO"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMPI"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP4"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "MSTORE"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "KECCAK256"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SWAP2"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "ADD"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SWAP2"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "ADD"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SWAP2"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SWAP2"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "GT"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "ISZERO"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMPI"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "ADD"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SSTORE"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "ADD"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMP"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMP"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1492,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820caba7e67a87ee2de771bea82120ebfa3abd815d372e2048ca77c57baf8bfb4630029",
									".code": [
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "SWAP1"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "DIV"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "AND"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1492,
											"name": "REVERT"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "JUMPDEST"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "POP"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "DUP1"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "SUB"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "DUP2"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "ADD"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "SWAP1"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "DUP1"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "DUP1"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "AND"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "SWAP1"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "ADD"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "SWAP1"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "SWAP3"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "SWAP2"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "SWAP1"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "POP"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "POP"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "POP"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "JUMP"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "JUMPDEST"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "STOP"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "JUMPDEST"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "JUMP"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "JUMPDEST"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "MLOAD"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "DUP1"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "DUP3"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "AND"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "AND"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "DUP2"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "MSTORE"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "ADD"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "SWAP2"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "MLOAD"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "DUP1"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "SWAP2"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "SUB"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "RETURN"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "JUMPDEST"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "POP"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "DUP1"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "SUB"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "DUP2"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "ADD"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "SWAP1"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "DUP1"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "DUP1"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "AND"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "SWAP1"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "ADD"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "SWAP1"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "SWAP3"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "SWAP2"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "SWAP1"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "POP"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "POP"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "POP"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "JUMP"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "JUMPDEST"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "STOP"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "JUMPDEST"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "DUP1"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "SWAP1"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "SLOAD"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "SWAP1"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "EXP"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "SWAP1"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "DIV"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "AND"
										},
										{
											"begin": 531,
											"end": 556,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 556,
											"name": "AND"
										},
										{
											"begin": 531,
											"end": 541,
											"name": "CALLER"
										},
										{
											"begin": 531,
											"end": 556,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 556,
											"name": "AND"
										},
										{
											"begin": 531,
											"end": 556,
											"name": "EQ"
										},
										{
											"begin": 531,
											"end": 556,
											"name": "ISZERO"
										},
										{
											"begin": 531,
											"end": 581,
											"name": "DUP1"
										},
										{
											"begin": 531,
											"end": 581,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 531,
											"end": 581,
											"name": "JUMPI"
										},
										{
											"begin": 531,
											"end": 581,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 566,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 567,
											"end": 574,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "AND"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "AND"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "KECCAK256"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "SLOAD"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "EXP"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "DIV"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 560,
											"end": 581,
											"name": "AND"
										},
										{
											"begin": 531,
											"end": 581,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 531,
											"end": 581,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 616,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 616,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 527,
											"end": 616,
											"name": "JUMPI"
										},
										{
											"begin": 598,
											"end": 605,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 598,
											"end": 605,
											"name": "JUMP"
										},
										{
											"begin": 527,
											"end": 616,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 527,
											"end": 616,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 652,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 626,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 633,
											"end": 640,
											"name": "DUP4"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "KECCAK256"
										},
										{
											"begin": 626,
											"end": 648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 626,
											"end": 648,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "SSTORE"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "POP"
										},
										{
											"begin": 687,
											"end": 692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 663,
											"end": 669,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 670,
											"end": 677,
											"name": "DUP4"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "AND"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "AND"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "DUP2"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "MSTORE"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "ADD"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "DUP2"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "MSTORE"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "ADD"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "KECCAK256"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "ADD"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "EXP"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "SLOAD"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "MUL"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "NOT"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "AND"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "DUP4"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "ISZERO"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "ISZERO"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "MUL"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "OR"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "SSTORE"
										},
										{
											"begin": 663,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "JUMPDEST"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "POP"
										},
										{
											"begin": 474,
											"end": 700,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "JUMPDEST"
										},
										{
											"begin": 1087,
											"end": 1109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1146,
											"name": "DUP1"
										},
										{
											"begin": 1161,
											"end": 1184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1210,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1150,
											"name": "SWAP3"
										},
										{
											"begin": 1122,
											"end": 1150,
											"name": "POP"
										},
										{
											"begin": 1213,
											"end": 1214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "SWAP1"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "POP"
										},
										{
											"begin": 1195,
											"end": 1447,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1195,
											"end": 1447,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1232,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1223,
											"end": 1239,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1239,
											"name": "SLOAD"
										},
										{
											"begin": 1223,
											"end": 1239,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1239,
											"name": "POP"
										},
										{
											"begin": 1216,
											"end": 1220,
											"name": "DUP2"
										},
										{
											"begin": 1216,
											"end": 1239,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1216,
											"end": 1239,
											"name": "AND"
										},
										{
											"begin": 1216,
											"end": 1239,
											"name": "LT"
										},
										{
											"begin": 1195,
											"end": 1447,
											"name": "ISZERO"
										},
										{
											"begin": 1195,
											"end": 1447,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1195,
											"end": 1447,
											"name": "JUMPI"
										},
										{
											"begin": 1296,
											"end": 1312,
											"name": "DUP3"
										},
										{
											"begin": 1268,
											"end": 1277,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1278,
											"end": 1282,
											"name": "DUP3"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "AND"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "DUP2"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "SLOAD"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "DUP2"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "LT"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "ISZERO"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "ISZERO"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "INVALID"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "SWAP1"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "MSTORE"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "KECCAK256"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "ADD"
										},
										{
											"begin": 1268,
											"end": 1293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1293,
											"name": "ADD"
										},
										{
											"begin": 1268,
											"end": 1293,
											"name": "SLOAD"
										},
										{
											"begin": 1268,
											"end": 1312,
											"name": "GT"
										},
										{
											"begin": 1264,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 1264,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1264,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1362,
											"end": 1366,
											"name": "DUP2"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "AND"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "DUP2"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "SLOAD"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "DUP2"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "LT"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "ISZERO"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "ISZERO"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "JUMPI"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "INVALID"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "JUMPDEST"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "MSTORE"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "KECCAK256"
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "ADD"
										},
										{
											"begin": 1352,
											"end": 1377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1377,
											"name": "ADD"
										},
										{
											"begin": 1352,
											"end": 1377,
											"name": "SLOAD"
										},
										{
											"begin": 1333,
											"end": 1377,
											"name": "SWAP3"
										},
										{
											"begin": 1333,
											"end": 1377,
											"name": "POP"
										},
										{
											"begin": 1416,
											"end": 1420,
											"name": "DUP1"
										},
										{
											"begin": 1396,
											"end": 1420,
											"name": "SWAP2"
										},
										{
											"begin": 1396,
											"end": 1420,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1436,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1264,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "DUP1"
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "DUP1"
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "ADD"
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "SWAP2"
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "POP"
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "POP"
										},
										{
											"begin": 1195,
											"end": 1447,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1195,
											"end": 1447,
											"name": "JUMP"
										},
										{
											"begin": 1195,
											"end": 1447,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1195,
											"end": 1447,
											"name": "JUMPDEST"
										},
										{
											"begin": 1464,
											"end": 1481,
											"name": "DUP2"
										},
										{
											"begin": 1457,
											"end": 1481,
											"name": "SWAP4"
										},
										{
											"begin": 1457,
											"end": 1481,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1489,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "JUMPDEST"
										},
										{
											"begin": 758,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 781,
											"end": 787,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 788,
											"end": 798,
											"name": "CALLER"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "AND"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "AND"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "MSTORE"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "ADD"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "MSTORE"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "ADD"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "KECCAK256"
										},
										{
											"begin": 758,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 799,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "SLOAD"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "EXP"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "DIV"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 814,
											"end": 826,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 860,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 860,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 814,
											"end": 860,
											"name": "JUMPI"
										},
										{
											"begin": 814,
											"end": 860,
											"name": "POP"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP1"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "SLOAD"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "SWAP1"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "POP"
										},
										{
											"begin": 830,
											"end": 840,
											"name": "DUP3"
										},
										{
											"begin": 830,
											"end": 860,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 830,
											"end": 860,
											"name": "AND"
										},
										{
											"begin": 830,
											"end": 860,
											"name": "LT"
										},
										{
											"begin": 830,
											"end": 860,
											"name": "ISZERO"
										},
										{
											"begin": 814,
											"end": 860,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 814,
											"end": 860,
											"name": "JUMPDEST"
										},
										{
											"begin": 810,
											"end": 895,
											"name": "ISZERO"
										},
										{
											"begin": 810,
											"end": 895,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 810,
											"end": 895,
											"name": "JUMPI"
										},
										{
											"begin": 877,
											"end": 884,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 877,
											"end": 884,
											"name": "JUMP"
										},
										{
											"begin": 810,
											"end": 895,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 810,
											"end": 895,
											"name": "JUMPDEST"
										},
										{
											"begin": 920,
											"end": 924,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 917,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 905,
											"end": 917,
											"name": "ADD"
										},
										{
											"begin": 905,
											"end": 917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "EXP"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "SLOAD"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "MUL"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "NOT"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "AND"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "DUP4"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "MUL"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "OR"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "SSTORE"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 941,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 946,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 935,
											"end": 946,
											"name": "ADD"
										},
										{
											"begin": 935,
											"end": 946,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "EXP"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "SLOAD"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "NOT"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "DUP4"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "OR"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "SSTORE"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 1005,
											"end": 1018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1018,
											"name": "ADD"
										},
										{
											"begin": 1005,
											"end": 1018,
											"name": "SLOAD"
										},
										{
											"begin": 970,
											"end": 979,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 980,
											"end": 990,
											"name": "DUP4"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "AND"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "SLOAD"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "LT"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "ISZERO"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "ISZERO"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "JUMPI"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "INVALID"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "JUMPDEST"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "SWAP1"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "MSTORE"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "KECCAK256"
										},
										{
											"begin": 970,
											"end": 991,
											"name": "ADD"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "DUP3"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "DUP3"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "SLOAD"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "ADD"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "SWAP3"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "POP"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "POP"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "SWAP1"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "SSTORE"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "POP"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "JUMPDEST"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "POP"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "POP"
										},
										{
											"begin": 708,
											"end": 1026,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BallotV1.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BallotV1.sol\":{\"keccak256\":\"0xc5962322a0ad77803ff8abf54bdfc765c4dacdc31fe6b2d9fabb512ffe789eef\",\"urls\":[\"bzzr://717a4e43150aa00bcfb752b300a4eae991b86b6d3fbf9748612fe7c5e614f143\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/BallotV1.sol:18:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Ballot(uint8 _numProposals) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 466,
					"file": "contracts/BallotV1.sol",
					"start": 295
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/BallotV1.sol": {
				"ast": {
					"absolutePath": "contracts/BallotV1.sol",
					"exportedSymbols": {
						"Ballot": [
							167
						]
					},
					"id": 168,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "74:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "74:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "96:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "96:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "117:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "117:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 167,
									"src": "50:85:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "170:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "170:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 167,
									"src": "143:49:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 167,
									"src": "200:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "200:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 167,
									"src": "226:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "235:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "226:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 15,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "246:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 167,
									"src": "266:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 18,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "266:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 19,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "266:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "339:127:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "350:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "364:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "364:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "350:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "350:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "385:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 32,
															"indexExpression": {
																"argumentTypes": null,
																"id": 31,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "392:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "385:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "385:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "414:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "385:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "385:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "426:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "426:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 40,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "445:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "426:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "426:32:0"
											}
										]
									},
									"documentation": null,
									"id": 44,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ballot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "311:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 21,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "311:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "310:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "339:0:0"
									},
									"scope": 167,
									"src": "295:171:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "516:184:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 49,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "531:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "531:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 51,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "545:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "531:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "560:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 55,
															"indexExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "560:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "560:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "531:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 60,
												"nodeType": "IfStatement",
												"src": "527:89:0",
												"trueBody": {
													"id": 59,
													"nodeType": "Block",
													"src": "583:33:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 48,
															"id": 58,
															"nodeType": "Return",
															"src": "598:7:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 61,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "626:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 63,
															"indexExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "633:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "626:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "626:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "651:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "626:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "626:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 68,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "663:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 70,
															"indexExpression": {
																"argumentTypes": null,
																"id": 69,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "670:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "663:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "663:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "687:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "663:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "663:29:0"
											}
										]
									},
									"documentation": null,
									"id": 76,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "492:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "491:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "516:0:0"
									},
									"scope": 167,
									"src": "474:226:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "747:279:0",
										"statements": [
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "758:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 81,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 87,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 86,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 84,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "788:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "788:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "781:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "758:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 88,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "814:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "814:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 90,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "830:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 91,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "844:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "844:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "830:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "814:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 97,
												"nodeType": "IfStatement",
												"src": "810:85:0",
												"trueBody": {
													"id": 96,
													"nodeType": "Block",
													"src": "862:33:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 80,
															"id": 95,
															"nodeType": "Return",
															"src": "877:7:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 98,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "905:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "920:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "905:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "905:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 104,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "935:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "935:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 107,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "949:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "935:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "935:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 110,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "970:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 112,
															"indexExpression": {
																"argumentTypes": null,
																"id": 111,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "980:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "970:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "970:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 114,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1005:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1005:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "970:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "970:48:0"
											}
										]
									},
									"documentation": null,
									"id": 119,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "722:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 77,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "722:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "721:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "747:0:0"
									},
									"scope": 167,
									"src": "708:318:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1111:378:0",
										"statements": [
											{
												"assignments": [
													125
												],
												"declarations": [
													{
														"constant": false,
														"id": 125,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 166,
														"src": "1122:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1122:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1149:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1122:28:0"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 129,
														"name": "__winningProposal",
														"nodeType": "VariableDeclaration",
														"scope": 166,
														"src": "1161:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 128,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1161:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 130,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1161:23:0"
											},
											{
												"body": {
													"id": 161,
													"nodeType": "Block",
													"src": "1249:198:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 142,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 20,
																			"src": "1268:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 144,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 143,
																			"name": "prop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 132,
																			"src": "1278:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1268:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$11_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 10,
																	"src": "1268:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 146,
																	"name": "winningVoteCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "1296:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1268:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 160,
															"nodeType": "IfStatement",
															"src": "1264:172:0",
															"trueBody": {
																"id": 159,
																"nodeType": "Block",
																"src": "1314:122:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 148,
																				"name": "winningVoteCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 125,
																				"src": "1333:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 149,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 20,
																						"src": "1352:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																							"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 151,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 150,
																						"name": "prop",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 132,
																						"src": "1362:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1352:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$11_storage",
																						"typeString": "struct Ballot.Proposal storage ref"
																					}
																				},
																				"id": 152,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 10,
																				"src": "1352:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1333:44:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 154,
																		"nodeType": "ExpressionStatement",
																		"src": "1333:44:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 155,
																				"name": "__winningProposal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "1396:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 156,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 132,
																				"src": "1416:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "1396:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 158,
																		"nodeType": "ExpressionStatement",
																		"src": "1396:24:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 135,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1216:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 136,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1223:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1223:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1216:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 162,
												"initializationExpression": {
													"assignments": [
														132
													],
													"declarations": [
														{
															"constant": false,
															"id": 132,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 166,
															"src": "1200:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 131,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1200:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 134,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1213:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1200:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1241:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 139,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1241:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 141,
													"nodeType": "ExpressionStatement",
													"src": "1241:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1195:252:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 163,
													"name": "__winningProposal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "1464:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 123,
												"id": 164,
												"nodeType": "Return",
												"src": "1457:24:0"
											}
										]
									},
									"documentation": null,
									"id": 166,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1059:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1087:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 121,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1087:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1086:24:0"
									},
									"scope": 167,
									"src": "1035:454:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 168,
							"src": "27:1465:0"
						}
					],
					"src": "0:1492:0"
				},
				"id": 0
			}
		}
	}
}